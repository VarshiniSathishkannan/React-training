React app using JS
// ES6 ECMA Script version 6 -- official name of js -- ES2015


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
</head>
<body>
    <h1> Welcome to Walmart </h1>
    <div id="root"></div>
    <script>
        var domcontainer = document.getElementById("root");
        var root = ReactDOM.createRoot(domcontainer);
        // createelement takes 3 arguments - what type of element, attributes and children
        var h1elem = React.createElement("h1",null,"welcome");
        var linkelem = React.createElement("a",{href:"https://www.walmart.com/"},"Go to link");
        root.render(h1elem);
        root.render(linkelem); 
        // render will only pickup the frst argument it will ignore the rest of the elements
        // render will create a virtual DOM, it will follow a tree structure. it can have only one root
        var division = React.createElement("div",null,[h1elem,linkelem]);
        root.render(division);
    </script>
</body>
</html>

React app using JSX

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
</head>
<body>
    <h1> Welcome to Walmart </h1>
    <div id="root"></div>
    <script type="text/babel">
        var domcontainer = document.getElementById("root");
        var root = ReactDOM.createRoot(domcontainer);
        // JSX javascript exentisibility -- using HTML in JS 
        var h1elem = <h1> Hello </h1>; // if closing tag is not proper it will throw an error
        var anchroekem = <a href="https://www.walmart.com/">Go to link</a>
        var division = <div> <h1> Hello </h1>
            <a href="https://www.walmart.com/">Go to link</a>
            </div>
        var division = <div> {h1ele} </div>
        root.render(division);
    </script>
</body>
</html>

<!-- requires a transalator to translate from JSX to JS and a compiler (list the syntax error in the file) which will be taken care by Babel 
Babel is also known as transpiler -->
