Error Boundary
A Class component that implements either one or both of the lifecycle methods getDerivedStateFromError and componentDidCatch becomes an error boundary
The static method getDerivedStateFromError is used to render a fallback UI after an error is thrown and the componentDidCatch method is used to log the error information
import React, { Component } from 'react'

export class ErrorBoundary extends Component {
  constructor()
  {
    super()
    this.state = {
            hasError: false
        }
  }
  static getDerivedStateFromError(error)
  { 
      return { hasError: true }

  }
  render() {
    if(this.state.hasError) {
        return <h1> Something went wrong </h1>
    }
    return this.props.children
  }
}

export default ErrorBoundary

import React from 'react'
import ErrorBoundary from './ErrorBoundary'
import Regular from './Regular'

export default function Hero() {
  return (
    <div>
        <ErrorBoundary>
        <Regular name='Varshini'></Regular>
        <Regular name='Neelesh'></Regular>
        <Regular name='Jothi'></Regular>
        <Regular name='Sathish'></Regular>
        <Regular name='Joker'></Regular>
        </ErrorBoundary>
    </div>
  )
}


props.children represents the content between the opening and the closing tags when invoking/rendering a component
  componentDidCatch(error, info)
  {
    console.log(error)
    console.log(info)
  }
